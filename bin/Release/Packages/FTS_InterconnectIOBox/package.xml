<?xml version="1.0" encoding="utf-8"?>
<Package InfoLink="" Date="03/19/2025 14:33:29" Name="FTS_InterconnectIOBox" Version="0.0.1-beta.1+4f9f8c8f" Architecture="AnyCPU" OS="Windows,Linux" xmlns="http://opentap.io/schemas/package">
  <Hash>ZRJvETk99ZjcO0i2QBAh2ve1wxA</Hash>
  <Description>This is my OpenTAP plugin package for the First TestStation InterconnectIOBox.</Description>
  <Dependencies>
    <PackageDependency Package="OpenTAP" Version="^9.27.0+11e5348d" />
  </Dependencies>
  <Files>
    <File Path="Packages/OpenTAP_IOBox/InterconnectIOBox.dll">
      <Plugins>
        <Plugin Type=".Wcfgf" BaseType="Test Step">
          <Name>Write Default Configuration</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>System power-up configuration is saved in an EEPROM. This SCPI command (CFG:WRITE:EEPROM:DEFAULT) write all default parameters in the EEPROM.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Config</String>
          </Groups>
        </Plugin>
        <Plugin Type=".Wcfgp" BaseType="Test Step">
          <Name>
            <Base64>V3JpdGUgQ29uZmlndXJhdGlvbiBwYXJhbWV0ZXIg</Base64>
          </Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>System power-up configuration is saved in an EEPROM. This SCPI command (CFG:WRITE:EEPROM:STR)  write a single parameter to the EEPROM. Run TestSTep Read Configuration to get the list of valids parameters</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Config</String>
          </Groups>
        </Plugin>
        <Plugin Type=".Rcfgp" BaseType="Test Step">
          <Name>
            <Base64>UmVhZCBDb25maWd1cmF0aW9uIHBhcmFtZXRlciA=</Base64>
          </Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>System power-up configuration is saved in an EEPROM. This SCPI command (CFG:READ:EEPROM:STR?)  Read single parameter to the EEPROM. Validation of Value read is possible</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Config</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ReadADC" BaseType="Test Step">
          <Name>ADC</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Read the voltage from the Pico Analog-to-Digital Converter (ADC) and verify if it falls within the expected range. The Pico Master has two ADC inputs, ADC0 and ADC1, each supporting a voltage range of 0 to 3V DC. Additionally, VSYS measures the voltage at the Pico Master's VSYS pin, which is expected to be 5V. The internal temperature sensor provides a reading in Celsius, representing the Pico Master's internal temperature</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Analog</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Rcfgf" BaseType="Test Step">
          <Name>Read Full Configuration</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>System power-up configuration is saved in an EEPROM. This SCPI command (CFG:READ:EEPROM:FULL?) retrieves all parameters stored in the EEPROM.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Config</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.WriteDac" BaseType="Test Step">
          <Name>DAC</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Output voltage 0 - 3.3V from Digital Analog Converter (DAC).</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Analog</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Portscfg" BaseType="Test Step">
          <Name>Dual Ports 8-bits Direction Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Configure direction of Port0 and/or Port1 as Input or Output. Configuration can be specified using a byte value in decimal, hexadecimal, or binary, or by setting individual bits for each port.Enabling byte or bit configuration is done by checking the enable checkbox and selecting a value(0 for Input, 1 for Output). The read function operates similarly—enable the byte or bit to verify and set the value.The read result is then published.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Digital</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.PortsIO" BaseType="Test Step">
          <Name>Dual Ports 8-bits  Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write or Read data of Port0 and/or Port1 configured as Input or Output. Set or Read data can be specified using a byte value in decimal, hexadecimal, or binary, or by setting individual bits for each port. Enabling byte or bit Write/Read is done by checking the enable checkbox and selecting a binary value. The read function operates similarly—enable the byte or bit to verify and set the value.The read result is then published.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Digital</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.FTS_DUT" BaseType="Dut">
          <Name>DUT Module</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description />
          <Collapsed>false</Collapsed>
          <Groups>
            <String>First_TestStation</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Gpiocfg" BaseType="Test Step">
          <Name>GPIO Direction Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Configure direction of GPIO as Input or Output. Direction could be set for the designated GPIO or for any GPIO on any Pico device Enabling GPIO pin direction is done by checking the enable checkbox and selecting a value(0 for Input, 1 for Output). The read function operates similarly—enable the byte or bit to verify and set the value.The read result is then published. Be Careful using the Any Gpio control, it is an advanced mode and could cause malfunction</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>GPIO</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.GpioPAD" BaseType="Test Step">
          <Name>GPIO PAD Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>
            <Base64>R1BJTyBQQUQgbW9kdWxlIGlzIGEgbG93IGxldmVsIHRvIGNvbnRyb2wgdGhlIGRpZmZlcmVudHMgb3B0aW9uIGF2YWlsYWJsZSBvbiBlYWNoIEdQSU8gcGluLiBQQUQgZnVuY3Rpb24gYXJlOiBCaXQgNzogT0QgT3VwdXQgRGlzYWJsZSwgQml0IDY6IElFIElucHV0IEVuYWJsZSwgQml0IDU6NCBEcml2ZSBTdHJlbmd0aCAweDA6Mm1BLCAweDE6NG1BLCAweDI6OG1BLCAweDM6MTJtQSwgQml0MzogUFVFIFB1bGwtdXAgRW5hYmxlLCBCaXQgMjogUERFIFB1bGwtZG93biBFbmFibGUgQml0IDE6IFNDSFQgRW5hYmxlIFNjaG1pZHQgdHJpZ2dlciwgQml0IDA6IFNMRiBTbGV3IHJhdGUgQ29udHJvbCAoMDogU2xvdywgMTogRmFzdCkuIFRoZSB3cml0ZSBhY3Rpb24gd2lsbCB1cGRhdGUgdGhlIFBBRCB2YWx1ZSBhbmQgdGhlIHJlYWQgd2lsbCBnZXQgdGhlIFBBRCB2YWx1ZS4gRG8gbm90IGZvcmdldCBvZiB0aGUgR1BJTyBhcmUgcHJvdGVjdGVkIGFuZCBub3QgZGlyZWN0bHkgYXZhaWxhYmxlIHRvIHRoZSBEVVQuIEEgZm9uY3Rpb24gbGlrZSBEcml2ZSBTdHJlbmd0aCB3aWxsIG5vdCB3b3JrIGR1dCB0byB0aGUgcHJlY3Rpb24gZGV2aWNlcy4g</Base64>
          </Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>GPIO</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.GpioIO" BaseType="Test Step">
          <Name>GPIO Input/Output Bit Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write or Read data of GPIO pin on dedicated GPIO or on GPIO of any device. Enabling GPIO update is done by checking the enable checkbox and selecting a value to write or read(0 or 1). The read function operates similarly—enable the bit to verify and set the value.The read result is then published. Be Careful using the Any Gpio control, it is an advanced mode and could cause malfunction</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>GPIO</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ItcCfg" BaseType="Test Step">
          <Name>I2C Config</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Enable and configure I2C communication, including baudrate, Mode, ChipSelect and Databits.I2C must be enabled for operation as a I2C port. When disabled, the I2C pins function as normal GPIOs.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>I2C</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ItcCom" BaseType="Test Step">
          <Name>I2C Data Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write/read data on I2C port. I2C must be enabled for operation.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>I2C</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.InterconnectIO" BaseType="Instrument">
          <Name>InterconnectIO</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Multi-functions Interconnect IO Box</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>First_TestStation</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.MyResultListener" BaseType="Result Listener">
          <Name>MyResultListener</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Insert a description here</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>FTS_Selftest</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.OneWireDUTRead" BaseType="Test Step">
          <Name>1-Wire DUT validation</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Validate the part number of the DUT by reading data from its 1-Wire device. If the test FAILS, the Testplan must be aborted to prevent potential damage to an unknown DUT.In the TestStep,enable the break condition when the TestStep encounters an error or failure.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>1-Wire</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.OneWireDUTWrite" BaseType="Test Step">
          <Name>1-Wire DUT Write Data</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write data (partnumber,serialnumber and connector refdes) on 1-Wire DUT device</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>1-Wire</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.OCAction" BaseType="Test Step">
          <Name>Open Collector Transistor Control</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>SCPI command to control the three open-collector transistors and read back their status.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Analog</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ReadPWR" BaseType="Test Step">
          <Name>PWR Monitor read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Read Load Voltage or (0.1 Ohm) Shunt voltage or Current (mA) or Power (mW).</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Analog</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.RBank" BaseType="Test Step">
          <Name>Single Bank Multiple Relay Close or Open</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Open or close one or multiple routes to a single Bank</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Route</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ExBank" BaseType="Test Step">
          <Name>Exclusive Mode: Close Relay by Bank</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Closes one relay per bank in Exclusive mode. Any previously closed relay on the selected bank will be opened before closing the new relay. Selecting CH8-CH15 activates the Reverse Relay, connecting the Low Side input to COM High Side.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Route</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.OpenBank" BaseType="Test Step">
          <Name>Open Single Bank</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Open single relay Bank or all the banks</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Route</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SBRelay" BaseType="Test Step">
          <Name>Relays Banks validation</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>
            <Base64>UmVhZCBCYW5rIFJlbGF5IFN0YXR1cyBmb3Igb25lIG9yIG1hbnkgQmFuayAoMTogQ2xvc2UsIDA6T3BlbikuIE9wdGlvbm5hbCBTdGF0dXMgdmFsaWRhdGlvbiBpcyBhdmFpbGFibGUg</Base64>
          </Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Route</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Cstatus" BaseType="Test Step">
          <Name>Single Bank Multiple Relay Validation</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Read Relay Channel state (1: Close, 0:Open)</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Route</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Basic" BaseType="Test Step">
          <Name>Basic Command</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Required SCPI Basic command.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>
              <Base64>U0NQSSA=</Base64>
            </String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Manual" BaseType="Test Step">
          <Name>Manual Command</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>SCPI command enter manually.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>
              <Base64>U0NQSSA=</Base64>
            </String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.RegCmd" BaseType="Test Step">
          <Name>Register Command</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Group of command used to read or SCPI Register.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>
              <Base64>U0NQSSA=</Base64>
            </String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Selftest_com" BaseType="Test Step">
          <Name>Selftest COM command</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Group of I2C command used to communicate with Selftest Board</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>ZModule</String>
            <String>Selftest DUT</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Selftest_gpio" BaseType="Test Step">
          <Name>Selftest GPIO command</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Group of I2C command used to communicate with Selftest Board</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>ZModule</String>
            <String>Selftest DUT</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SerialCfg" BaseType="Test Step">
          <Name>Serial Config</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Enable and configure serial communication, including baud rate, protocol, handshake, and timeout.Serial must be enabled for operation as a serial port. When disabled, the serial pins function as normal GPIOs.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>Serial</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SerialCom" BaseType="Test Step">
          <Name>Serial Data Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write/read data on Serial port.Serial must be enabled for operation as a serial port.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>Serial</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.RelayAction" BaseType="Test Step">
          <Name>Isolated Relay Control</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>SCPI Command to set state of relays: LPR1, LPR2, HPR1, HPR2 and 5V_DUT. You can also read the relay state, close the relay and verify if it is closed, or open the relay and verify if it is open.")</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Analog</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SpiCfg" BaseType="Test Step">
          <Name>SPI Config</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Enable and configure SPI communication, including baudrate, Mode, ChipSelect and Databits.SPI must be enabled for operation as a SPI port. When disabled, the SPI pins function as normal GPIOs.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>SPI</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SpiCom" BaseType="Test Step">
          <Name>SPI Data Write/Read</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Write/read data on SPI port.SPI must be enabled for operation as a serial port.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>Communication</String>
            <String>SPI</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Beeper" BaseType="Test Step">
          <Name>Beeper</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Generate short (100mS) beep pulse</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Firmware" BaseType="Test Step">
          <Name>Pico Firmware Version</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>
            <Base64>UmVhZCBGaXJtd2FyZSB2ZXJzaW9uIGZvciBQaWNvIE1hc3RlciwgU2xhdmUxLCBTbGF2ZTIsIFNsYXZlMyBkZXZpY2VzIA==</Base64>
          </Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.ErrorLed" BaseType="Test Step">
          <Name>Error Led</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Set or read the status of the Red Error LED. Each line of the test control is processed sequentially. If you first select 'ON' and then 'OFF,' the LED will briefly flash</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.Slaves" BaseType="Test Step">
          <Name>Pico Slaves</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Enable, Disable (to reset the Pico Slave)  or Read Pico Slave Status.Each line of the test control is processed sequentially.If you first select 'OFF' and then 'ON,' the Slaves will be reset to default configuration.</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SystemVersion" BaseType="Test Step">
          <Name>System Version</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>Read SCPI version used, Version could be validated and result publish</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
        <Plugin Type="InterconnectIOBox.SysErr" BaseType="Test Step">
          <Name>System Error</Name>
          <Order>-10000</Order>
          <Browsable>true</Browsable>
          <Description>read number of Errors. Read List Errors. Empty List of Errors. Publish is value Expected</Description>
          <Collapsed>false</Collapsed>
          <Groups>
            <String>InterconnectIO</String>
            <String>System</String>
          </Groups>
        </Plugin>
      </Plugins>
      <Hash>863B26CCDCE014ACD4474B8EC0E8D135E9862544</Hash>
    </File>
  </Files>
</Package>